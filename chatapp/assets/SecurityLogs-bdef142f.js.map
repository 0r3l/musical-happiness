{"version":3,"file":"SecurityLogs-bdef142f.js","sources":["../../../../src/pages/SecurityLogs.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { securityLogsApi } from \"../api\";\n\nexport function Component(): JSX.Element {\n    const [data, setData] = useState<string | null>(null);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await securityLogsApi(); // Replace with your API endpoint\n                if (!response.ok) {\n                    throw new Error(\"Network response was not ok\");\n                }\n                const result = await response.json();\n                setData(result);\n            } catch (error) {\n                setError(\"error\");\n            }\n        };\n\n        fetchData();\n    }, []); // Empty dependency array means this effect runs only once after the initial render\n\n    if (error) {\n        return <h1>Error: {error}</h1>;\n    }\n\n    if (!data) {\n        return <h1>Loading...</h1>;\n    }\n\n    return (\n        <div>\n            <h1>Data Loaded</h1>\n            <pre>{JSON.stringify(data, null, 2)}</pre>\n        </div>\n    );\n}\n\nComponent.displayName = \"NoPage1\";\n"],"names":["Component","data","setData","useState","error","setError","useEffect","response","securityLogsApi","result","jsx"],"mappings":"mKAGO,SAASA,GAAyB,CACrC,KAAM,CAACC,EAAMC,CAAO,EAAIC,WAAwB,IAAI,EAC9C,CAACC,EAAOC,CAAQ,EAAIF,WAAwB,IAAI,EAmBtD,OAjBAG,EAAAA,UAAU,IAAM,EACM,SAAY,CACtB,GAAA,CACM,MAAAC,EAAW,MAAMC,IACnB,GAAA,CAACD,EAAS,GACJ,MAAA,IAAI,MAAM,6BAA6B,EAE3C,MAAAE,EAAS,MAAMF,EAAS,OAC9BL,EAAQO,CAAM,OACF,CACZJ,EAAS,OAAO,CACpB,CAAA,IAIR,EAAG,CAAE,CAAA,EAEDD,SACQ,KAAG,CAAA,SAAA,CAAA,UAAQA,CAAM,CAAA,CAAA,EAGxBH,SAKA,MACG,CAAA,SAAA,CAAAS,EAAAA,IAAC,MAAG,SAAW,aAAA,CAAA,QACd,MAAK,CAAA,SAAA,KAAK,UAAUT,EAAM,KAAM,CAAC,EAAE,CACxC,CAAA,CAAA,EAPOS,EAAA,IAAC,MAAG,SAAU,YAAA,CAAA,CAS7B,CAEAV,EAAU,YAAc"}